version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:3001
      - VITE_ENABLE_PERFORMANCE_MONITORING=true
      - VITE_PERFORMANCE_LOG_LEVEL=info
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
    depends_on:
      - backend
    networks:
      - app-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - CORS_ORIGIN=http://localhost:5000
    env_file:
      - .env
    volumes:
      - ./api:/app/api
      - ./simple-server.js:/app/simple-server.js
    networks:
      - app-network

  # API service (if using full API server)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    env_file:
      - .env
    volumes:
      - ./api:/app/api
      - ./api-server.js:/app/api-server.js
    networks:
      - app-network
    profiles:
      - full

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=perfuser
      - POSTGRES_PASSWORD=perfpass
      - POSTGRES_DB=performance_optimization
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    profiles:
      - with-db

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    profiles:
      - with-cache

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge